/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Order;
import io.swagger.model.Product;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-01-21T11:51:13.410Z[GMT]")
@Api(value = "orderDetails", description = "the orderDetails API")
public interface OrderDetailsApi {

	@ApiOperation(value = "", nickname = "orderDetailsOrderIdGet", notes = "Obtain information about specific product.", response = Order.class, tags = {})

	@ApiResponses(value = {

			@ApiResponse(code = 200, message = "Success", response = Order.class) })

	@RequestMapping(value = "/orderDetails/{OrderId}", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<Order> orderDetailsOrderIdGet(
			@ApiParam(value = "", required = true) @PathVariable("OrderId") Long orderId) throws NotFoundException;

	@ApiOperation(value = "", nickname = "orderDetailsUserNameGet", notes = "Obtain information about specific product.", response = Order.class, tags = {})
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Success", response = Order.class) })
	@RequestMapping(value = "/orderDetails/{UserName}", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<List<Order>> orderDetailsUserNameGet(
			@ApiParam(value = "", required = true) @PathVariable("UserName") String userName) throws NotFoundException;
	
	/*
	 * @ApiOperation(value = "", nickname = "orderDetailsPost", notes =
	 * "Create a new order in the database", tags = {})
	 * 
	 * @ApiResponses(value = { @ApiResponse(code = 200, message =
	 * "Successfully created a new order.") })
	 * 
	 * @RequestMapping(value = "/orderDetails", consumes = { "application/json" },
	 * method = RequestMethod.POST) ResponseEntity<Product>
	 * productsPost(@ApiParam(value = "", required = true) @Valid @RequestBody Order
	 * body) throws NotFoundException;
	 */

}
